" vim: set filetype=vim:
set nocompatible

syntax on
filetype plugin indent on
colorscheme mdk_black
set   autoindent
if exists('+colorcolumn')
	set colorcolumn=80
endif
set   clipboard^=unnamed        " Sync unamed with clipboard registers
set   completeopt=longest
set noexpandtab
set   hidden
set   history=500
set   hlsearch
set   ignorecase        " smartcase is also set below
set   incsearch
set   laststatus=2
set   list
set   listchars=eol:¶,tab:»-,trail:·,extends:»,precedes:«
set   modelines=10
if exists("+mouse")
	set   mouse=a
endif
set   number
set   shiftwidth=8
set   showtabline=2     " always show tab line
set   smartcase         " ignorecase needs to be set
set   smarttab
set   spell
set   statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set   tabstop=8
set   textwidth=72      " Override per file type if need be
set   wildmode=longest,list
set nowrap
set nowrapscan

" Fold based on the most recent search and revert
nnoremap <Leader>f :setlocal foldmethod=expr foldlevel=0 foldexpr=getline(v:lnum)!~@/<CR>
nnoremap <Leader>F :setlocal foldmethod&<CR>

" Only show cursorline/cursorcolumn in the current window
set cursorline cursorcolumn
autocmd WinEnter * setlocal cursorline cursorcolumn
autocmd WinLeave * setlocal nocursorline nocursorcolumn

" Search source files only
command! -nargs=1 CGrep lvimgrep <args> **/*.[ch]
command! -nargs=1 PyGrep lvimgrep <args> **/*.py
nnoremap <C-f><C-c> <esc>:CGrep /\<lt><C-r><C-w>\>/j<cr>
nnoremap <C-f><C-p> <esc>:PyGrep /\<lt><C-r><C-w>\>/j<cr>
nnoremap <C-f><C-x> <esc>:lvimgrep /\<lt><C-r><C-w>\>/j <C-r>%<cr>
nnoremap <C-f><C-f> <esc>:lli<cr>

" Navigate and close windows
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-c> <C-w>c

" Markdown >> Modula-2 
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Work around issue with gnome-256color terminal
if ($TERM == 'gnome-256color')
	set ttymouse=xterm2
endif

runtime autoload/plug.vim
if exists("*plug#begin")
	let g:ctrlp_clear_cache_on_exit = 0
	let g:ctrlp_show_hidden = 1
	let g:ctrlp_working_path_mode = ''
	let g:ctrlp_match_func = {'match': 'matcher#cmatch'}
	let g:ctrlp_user_command = ['.git', 'git ls-files %s -co --exclude-standard']
	let g:ctrlp_lazy_update = 100

	call plug#begin('~/.vim/plugged')
	Plug '/usr/local/opt/fzf'

	Plug 'ctrlpvim/ctrlp.vim'
	Plug 'JazzCore/ctrlp-cmatcher', {'do': './install.sh'}

	Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer --java-completer' }

	Plug 'junegunn/fzf.vim'

	Plug 'nkouevda/vim-thrift'
	call plug#end()
endif
