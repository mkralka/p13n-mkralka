# Change the prefix to something more appropriate
set-option -g prefix C-\\
bind-key \\ send-prefix
unbind C-b

# Temporary hack to get 256 colors until I can figure it out properly
set -g default-terminal "screen-256color"

# Number windows/panes starting with 1. This is more to do with the fact
# that the keyboard goes from 1-9, 0 than any hangup about indexing from
# zero.
set -g base-index 1

# Use C-s C-s to toggle between two windows
unbind l
bind C-\\ last-window

# use | and - to split the windows vertically and horizontally (respectively)
bind | split-window -h
bind - split-window -v
unbind "\""
unbind %

# Allow titles to be displayed
set -g set-titles on
set -g set-titles-string "#S (#h)"
bind T command-prompt -I "#S" -p "Session Name:" "rename-session '%1'"

# Make the colouring bar a little more subdued 
set-option -g status-bg colour240
set-option -g status-fg colour254
set-window-option -g window-status-current-bg colour25
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr bold
set-option -g pane-border-fg colour240 # same as status-bg
set-option -g pane-border-bg colour240 # same as status-bg
set-option -g pane-active-border-fg colour25 # same as status-bg
set-option -g pane-active-border-bg colour25 # same as status-bg

set-option -g message-attr bold
set-option -g message-fg colour254
set-option -g message-bg colour9

# Scrollback Configuration
set-option -g history-limit 10000		# A more reasonable amount of history to save
set-window-option -g mode-keys vi		# I'm a VI guy, use VI instead of EMACS editing mode

# Repeat time of 500 ms is too long. When you switch panes, pressing
# an arrow key (up for bash history) cycles to the next pane.
# 200 ms seems (empirically) to be the right value
set-option -g repeat-time 200
set-option -g display-time 10000

# Pass through focus events to windows/panes
set -g focus-events on

# Shortcuts for selecting panes within a window
bind-key "\"" command-prompt -p index "select-pane -t '%%'"
bind-key 0 select-pane -t 0	# This is different than selecting windows because panes are always zero-based
bind-key 1 select-pane -t 1
bind-key 2 select-pane -t 2
bind-key 3 select-pane -t 3
bind-key 4 select-pane -t 4
bind-key 5 select-pane -t 5
bind-key 6 select-pane -t 6
bind-key 7 select-pane -t 7
bind-key 8 select-pane -t 8
bind-key 9 select-pane -t 9

bind-key M-0 select-window -t :10
bind-key M-1 select-window -t :1
bind-key M-2 select-window -t :2
bind-key M-3 select-window -t :3
bind-key M-4 select-window -t :4
bind-key M-5 select-window -t :5
bind-key M-6 select-window -t :6
bind-key M-7 select-window -t :7
bind-key M-8 select-window -t :8
bind-key M-9 select-window -t :9

# On this host, I never want to suspend tmux (why would you,
# just detach and reattach later - furthermore, I launch it
# using exec, so that when I detach, it closes the xterm),
# so disable the binding.
unbind-key C-z

# I have a few templates that are quite handy, bind them to keys
#bind-key P source-file ~/.tmux/project

# This is some magic for use with ~/bin/tmux
#set -g update-environment-variables "DISPLAY SSH_ASKPASS SSH_CONNECTION WINDOWID XAUTHORITY TMUX_SSH_AUTH_SOCK TMUX_GNOME_KEYRING_CONTROL TMUX_GNOME_KEYRING_SOCKET"
#set -g update-environment-variables "DISPLAY SSH_ASKPASS SSH_CONNECTION WINDOWID XAUTHORITY TMUX_SSH_AUTH_SOCK TMUX_GNOME_KEYRING_CONTROL"

#set set-environment -g SSH_AUTH_SOCK $HOME/.tmux/auth_sock
#set set-environment -g GNOME_KEYRING_CONTROL $HOME/.tmux/keyring_control
#set set-environment GNOME_KEYRING_SOCKET $HOME/.tmux/keyring_socket
